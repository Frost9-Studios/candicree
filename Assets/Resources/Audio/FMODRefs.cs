// <auto-generated> Do not edit by hand. </auto-generated>
// Generated: 2025-09-18 17:01:25
#define FMOD_REFS_GENERATED
using System.Collections.Generic;
using UnityEngine;
using Frost9.Audio.Generated;

namespace Frost9.Audio.Generated {
  public static class FMODRefs {
    public static class Events {
      /// <summary>event:/music/Arcane</summary>
      public const string MUSIC_ARCANE = "event:/music/Arcane";
      /// <summary>event:/music/Blessing</summary>
      public const string MUSIC_BLESSING = "event:/music/Blessing";
      /// <summary>event:/music/heroic_bg</summary>
      public const string MUSIC_HEROIC_BG = "event:/music/heroic_bg";
      /// <summary>event:/systems/routers/MusicRouter</summary>
      public const string SYSTEMS_ROUTERS_MUSICROUTER = "event:/systems/routers/MusicRouter";
      /// <summary>event:/tests/alert_cute_loop_POOL</summary>
      public const string TESTS_ALERT_CUTE_LOOP_POOL = "event:/tests/alert_cute_loop_POOL";
      /// <summary>event:/tests/alert_cute_POOL</summary>
      public const string TESTS_ALERT_CUTE_POOL = "event:/tests/alert_cute_POOL";
      /// <summary>event:/tests/confirm</summary>
      public const string TESTS_CONFIRM = "event:/tests/confirm";
      /// <summary>event:/tests/confirm_loop</summary>
      public const string TESTS_CONFIRM_LOOP = "event:/tests/confirm_loop";
      /// <summary>event:/tests/confirm_loop_bad</summary>
      public const string TESTS_CONFIRM_LOOP_BAD = "event:/tests/confirm_loop_bad";
      /// <summary>event:/tests/confirm_no_loop_bad</summary>
      public const string TESTS_CONFIRM_NO_LOOP_BAD = "event:/tests/confirm_no_loop_bad";
      /// <summary>event:/tests/notification</summary>
      public const string TESTS_NOTIFICATION = "event:/tests/notification";
      /// <summary>event:/tests/notification_loop</summary>
      public const string TESTS_NOTIFICATION_LOOP = "event:/tests/notification_loop";
      /// <summary>event:/ui/combat/notification</summary>
      public const string UI_COMBAT_NOTIFICATION = "event:/ui/combat/notification";
      /// <summary>event:/ui/combat/select_target</summary>
      public const string UI_COMBAT_SELECT_TARGET = "event:/ui/combat/select_target";
      /// <summary>event:/ui/menu/back</summary>
      public const string UI_MENU_BACK = "event:/ui/menu/back";
      /// <summary>event:/ui/menu/click</summary>
      public const string UI_MENU_CLICK = "event:/ui/menu/click";
      /// <summary>event:/ui/menu/confirm</summary>
      public const string UI_MENU_CONFIRM = "event:/ui/menu/confirm";
      /// <summary>event:/ui/menu/notification</summary>
      public const string UI_MENU_NOTIFICATION = "event:/ui/menu/notification";
      /// <summary>event:/ui/menu/wrong_input</summary>
      public const string UI_MENU_WRONG_INPUT = "event:/ui/menu/wrong_input";
    }
    public static class Global {
      /// <summary>InBattle</summary>
      public const string INBATTLE = "InBattle";
      /// <summary>IsNight</summary>
      public const string ISNIGHT = "IsNight";
      /// <summary>IsRaining</summary>
      public const string ISRAINING = "IsRaining";
      /// <summary>Location</summary>
      public const string LOCATION = "Location";
      /// <summary>LowHealthWarning</summary>
      public const string LOWHEALTHWARNING = "LowHealthWarning";
      /// <summary>PlayerHealth</summary>
      public const string PLAYERHEALTH = "PlayerHealth";
      /// <summary>TimeOfDay</summary>
      public const string TIMEOFDAY = "TimeOfDay";
      /// <summary>Weather</summary>
      public const string WEATHER = "Weather";
    }
    public static class VCAs {
      /// <summary>vca:/Master</summary>
      public const string MASTER = "vca:/Master";
      /// <summary>vca:/Music</summary>
      public const string MUSIC = "vca:/Music";
      /// <summary>vca:/SFX</summary>
      public const string SFX = "vca:/SFX";
      /// <summary>vca:/UI</summary>
      public const string UI = "vca:/UI";
      /// <summary>vca:/Voice</summary>
      public const string VOICE = "vca:/Voice";
    }
    public static class EventParameters {
      /// <summary>Parameters for event:/systems/routers/MusicRouter</summary>
      public static class SystemsRoutersMusicrouter {
        /// <summary>Location</summary>
        public const string LOCATION = "Location";
      }
      /// <summary>Parameters for event:/tests/confirm</summary>
      public static class TestsConfirm {
        /// <summary>IsNight</summary>
        public const string ISNIGHT = "IsNight";
        /// <summary>IsRaining</summary>
        public const string ISRAINING = "IsRaining";
        /// <summary>LowHealthWarning</summary>
        public const string LOWHEALTHWARNING = "LowHealthWarning";
        /// <summary>Weather</summary>
        public const string WEATHER = "Weather";
      }
      /// <summary>Parameters for event:/tests/notification</summary>
      public static class TestsNotification {
        /// <summary>InBattle</summary>
        public const string INBATTLE = "InBattle";
        /// <summary>PlayerHealth</summary>
        public const string PLAYERHEALTH = "PlayerHealth";
        /// <summary>TimeOfDay</summary>
        public const string TIMEOFDAY = "TimeOfDay";
      }
    }
    public static class Data {
      public static readonly Dictionary<string, ParameterInfo> Parameters = new Dictionary<string, ParameterInfo> {
        { "InBattle", new ParameterInfo("InBattle", 0f, 1f, ParameterType.Discrete, null) },
        { "IsNight", new ParameterInfo("IsNight", 0f, 1f, ParameterType.Discrete, null) },
        { "IsRaining", new ParameterInfo("IsRaining", 0f, 1f, ParameterType.Discrete, null) },
        { "Location", new ParameterInfo("Location", 0f, 2f, ParameterType.Labeled, new string[] { "Forest", "Town", "Desert" }) },
        { "LowHealthWarning", new ParameterInfo("LowHealthWarning", 0f, 1f, ParameterType.Discrete, null) },
        { "PlayerHealth", new ParameterInfo("PlayerHealth", 0f, 1f, ParameterType.Continuous, null) },
        { "TimeOfDay", new ParameterInfo("TimeOfDay", 0f, 24f, ParameterType.Continuous, null) },
        { "Weather", new ParameterInfo("Weather", 0f, 2f, ParameterType.Labeled, new string[] { "clear", "rain", "storm" }) },
      };
    }
  }
}
